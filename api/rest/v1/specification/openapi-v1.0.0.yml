openapi: 3.0.0
info:
  title: BEPSwap Chain-Service Public API
  version: 1.0.0-oas3
  contact:
    email: devs@thorchain.org
  description: The BEPSwap Chain-Service queries THORChain and Binance Chain and makes information about BEPSwap readily available for public users. The Chain Service parses transaction event data from THORChain and stores them in a time-series database to make time-dependent queries easy. The Chain Service does not hold critical information. To interact with BEPSwap, users should query THORChain directly.
paths:
  "/v1/swagger.json":
    get:
      operationId: GetSwagger
      summary: Get Swagger
      description: Returns human and machine readable swagger/openapi specification.
      responses:
        "200":
          description: human and machine readable swagger/openapi specification
      tags:
        - Specification
  "/v1/doc":
    get:
      operationId: GetDocs
      summary: Get Documents
      description: Swagger/openapi 3.0 specification generated documents.
      responses:
        "200":
          description: swagger/openapi 3.0 spec generated docs
      tags:
        - Documentation
  "/v1/health":
    get:
      operationId: GetHealth
      summary: Get Health
      description: Returns an object containing the health response of the API.
      responses:
        "200":
          description: health response of the API.
  "/v1/bepswap":
    get:
      operationId: GetBEPSwapData
      summary: Get BEPSwap Data
      description: Returns an object containing global BEPSwap data for all pools and all transactions.
      responses:
        "200":
          $ref: '#/components/responses/BEPSwapResponse'      
  "/v1/assets/{asset}":
    get:
      operationId: GetAssetInfo
      summary: Get Asset Information
      description: Detailed information about a specific asset. Returns enough information to display a unique asset in various user interfaces, including latest price. The logo is sourced from an internal database. 
      parameters:
        - in: path
          name: asset
          description: Unique asset (CHAIN.SYMBOL)
          required: true
          schema:
            type: string
          example: BNB.TOMOB-1E1
      responses:
        "400":
          $ref: '#/components/responses/GeneralErrorResponse'
        "200":
          $ref: '#/components/responses/AssetsDetailedResponse'
  "/v1/assets":
    get:
      operationId: GetAssets
      summary: Get Assets
      description: Returns an array containing all the assets supported on BEPSwap.
      responses:
        "400":
          $ref: '#/components/responses/GeneralErrorResponse'
        "200":
          $ref: '#/components/responses/AssetsResponse'
  "/v1/pools/{asset}":
    get:
      operationId: GetPoolsData
      summary: Get Pools Data
      description: Returns an object containing all the pool data for that asset. All assets on BEPSwap have associated pools. 
      parameters:
        - in: path
          name: asset
          description: Unique asset (CHAIN.SYMBOL)
          required: true
          schema:
            type: string
          example: BNB.TOMOB-1E1
      responses:
        "200":
          $ref: '#/components/responses/PoolsDetailedResponse'

  "/v1/stakers":
    get:
      operationId: GetStakersData
      summary: Get Stakers
      description: Returns an array containing the addresses for all stakers. Useful for leaderboards. 
      responses:
        "200":
          "$ref": "#/components/responses/StakersResponse"

  "/v1/stakers/{address}":
    get:
      operationId: GetStakersAddressData
      summary: Get Staker Data
      description: Returns an array containing all the pools the staker is staking in.
      parameters:
        - in: path
          name: address
          description: Unique staker address
          required: true
          schema:
            type: string
          example: 'bnb1jxfh2g85q3v0tdq56fnevx6xcxtcnhtsmcu64m'
      responses:
        "200":
          $ref: '#/components/responses/StakersAddressDataResponse'

  "/v1/stakers/{address}/{asset}":
    get:
      operationId: GetStakersAddressAndAssetData
      summary: Get Staker Pool Data
      description: Returns an object containing staking data for the specified staker and pool.
      parameters:
        - in: path
          name: address
          description: Unique staker address
          required: true
          schema:
            type: string
          example: 'bnb1jxfh2g85q3v0tdq56fnevx6xcxtcnhtsmcu64m'
        - in: path
          name: asset
          description: Unique asset
          required: true
          schema:
            type: string
          example: 'BNB.TOMOB-1E1'
      responses:
        "200":
          $ref: '#/components/responses/StakersAssetDataResponse'

  "/v1/stakeTx/{address}":
    get:
      operationId: GetStakerTxForAddress
      summary: Get Staking Transactions
      description: Returns an object containing staking transaction data for the staker specified.
      parameters:
        - in: path
          name: address
          description: Unique staker address
          required: true
          schema:
            type: string
          example: 'bnb1jxfh2g85q3v0tdq56fnevx6xcxtcnhtsmcu64m'
      responses:
        "200":
          $ref: '#/components/responses/StakeTxDataResponse'

  "/v1/swapTx/{address}":
    get:
      operationId: GetSwapTxForAddress
      summary: Get Swapping Transactions
      description: Returns an object containing swapping transaction data for the swapper specified.
      parameters:
        - in: path
          name: address
          description: Unique swapper address
          required: true
          schema:
            type: string
            example: 'bnb1jxfh2g85q3v0tdq56fnevx6xcxtcnhtsmcu64m'
      responses:
        "200":
          $ref: '#/components/responses/SwapTxDataResponse'
components:
  responses:
    SwapTxDataResponse:
      description: array of swapping transaction events
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SwapTxData'

    StakeTxDataResponse:
      description: array of staking transaction events
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StakeTxData'
    PoolsDetailedResponse:
      description: object containing pool data for that asset
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PoolDetail'

    BEPSwapResponse:
      description: object containing global BEPSwap data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BEPSwapData'

    StakersAddressDataResponse:
      description: array of all the pools the staker is staking in
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StakersAddressData'

    StakersResponse:
      description: array of all the stakers
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Stakers'

    StakersAssetDataResponse:
      description: object containing staking data for a specific staker and asset
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StakersAssetData'

    AssetsDetailedResponse:
      description: object containing detailed asset information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AssetDetail'

    AssetsResponse:
      description: array of assets
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Asset'

    GeneralErrorResponse:
      description: error message
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    SwapTxData:
      properties:
        Pool:
          $ref: '#/components/schemas/Asset'
        Type:
          type: string
          enum: [sell, buy, double]
        Status:
          type: string
          enum: [success, refund, priceCancelled]
        From:
          type: object
          properties:
            Address:
              type: string
            Coin:
              type: object
              properties:
                Asset:
                  $ref: '#/components/schemas/Asset'
                Amount:
                  type: string
            MEMO:
              type: string
            PriceTarget:
              type: integer
              format: int64
            TxID:
              type: string
        To:
          type: object
          properties:
            Address:
              type: string
            Coin:
              type: object
              properties:
                Asset:
                  $ref: '#/components/schemas/Asset'
                Amount:
                  type: string
            Fee:
              type: integer
              description: fees retained
            Slip:
              type: number
              format: double
              description: Swap slip
            Gas:
              type: object
              properties:
                Asset:
                  $ref: '#/components/schemas/Asset'
                Amount:
                  type: string
            MEMO:
              type: string
            TxID:
              type: string
            Date:
              type: string
              format: 'date-time'
            Height:
              type: integer
              format: int64
    StakeTxData:
      properties:
        Pool:
          $ref: '#/components/schemas/Asset'
        Type:
          type: string
          enum: [stake, withdraw]
        Status:
          type: string
          enum: [success, refund]
        Send:
          type: object
          properties:
            Coins:
              type: array
              items:
                type: object
                properties:
                  Asset:
                    $ref: '#/components/schemas/Asset'
                  Amount:
                    type: integer
                    format: int64
            MEMO:
              type: string
            TxID:
              type: string
        Receive:
          type: object
          properties:
            Coins:
              type: array
              items:
                type: object
                properties:
                  Asset:
                    $ref: '#/components/schemas/Asset'
                  Amount:
                    type: integer
                    format: int64
            MEMO:
              type: string
            TxID:
              type: string
            GAS:
              type: object
              properties:
                Asset:
                  $ref: '#/components/schemas/Asset'
                Amount:
                  type: integer
                  format: int64
        Stake:
          type: object
          properties:
            StakeUnitsAdded:
              type: integer
              format: int64
              description: Stake Units Added
        Withdraw:
          type: object
          properties:
            StakeUnitsSubtracted:
              type: integer
              format: int64
              description: wBP * stakeUnits/poolUnits
            WithdrawBP:
              type: integer
              format: int64
              description: Withdraw Base Points
            Asymmetry:
              type: number
              format: double
              description: Percent Asymmetry
        Date:
          type: string
          format: 'date-time'
        Height:
          type: integer
          format: int64
          description: Statechain blockheight

    BEPSwapData:
      type: object
      properties:
        DAU:
          type: integer
          format: int64
          description: Daily Active Users (unique bnb addresses interacting)
        MAU:
          type: integer
          format: int64
          description: Monthly Active Users
        TotalUsers:
          type: integer
          format: int64
          description: Total Unique Swappers & Stakers
        DailyTx:
          type: integer
          format: int64
          description: Daily transactions (bnb tx)
        MonthlyTx:
          type: integer
          format: int64
          description: Monthly transactions (bnb tx)
        TotalTx:
          type: integer
          format: int64
          description: Total transactions (bnb tx)
        TotalVolume24hr:
          type: integer
          format: int64
          description: Total (in RUNE Value) of all assets swapped in 24hrs
        TotalVolume:
          type: integer
          format: int64
          description: Total (in RUNE Value) of all assets swapped since start.
        TotalStaked:
          type: integer
          format: int64
          description: Total staked (in RUNE Value).
        TotalDepth:
          type: integer
          format: int64
          description: Total Rune Balances
        TotalEarned:
          type: integer
          format: int64
          description: Total earned (in RUNE Value).
        PoolCount:
          type: integer
          format: int64
          description: Number of active pools
        TotalAssetBuys:
          type: integer
          format: int64
          description: Total buying transactions (bnb tx)
        TotalAssetSells:
          type: integer
          format: int64
          description: Total selling transactions (bnb tx)
        totalStakeTx:
          type: integer
          format: int64
          description: Total staking transactions (bnb tx)
        totalWithdrawTx:
          type: integer
          format: int64
          description: Total withdrawing transactions (bnb tx)

    StakersAddressData:
      type: object
      properties:
        StakeArray:
          type: array
          items:
            $ref: '#/components/schemas/Asset'
        TotalStaked:
          type: integer
          format: int64
          description: poolStaked  across all pools.
        TotalEarned:
          type: integer
          format: int64
          description: Total value of earnings in RUNE across all pools.
        TotalROI:
          type: integer
          format: int64
          description: Average all all pool ROIs.

    StakersAssetData:
      type: object
      properties:
        Asset:
          $ref: '#/components/schemas/Asset'
        StakeUnits:
          type: integer
          format: int64
          description: Represents ownership of a pool.
        RuneStaked:
          type: integer
          format: int64
          description: Amount of RUNE staked.
        AssetStaked:
          type: integer
          format: int64
          description: Amount of Tokens staked.
        PoolStaked:
          type: integer
          format: int64
          description: Rune Value staked.
        RuneEarned:
          type: integer
          format: int64
          description: Value of RUNE earned from the pool.
        AssetEarned:
          type: integer
          format: int64
          description: Value of assets earned from the pool. i.e stakeUnits/poolUnits * (assetDepth - assetsStakedTotal)
        PoolEarned:
          type: integer
          format: int64
          description: Total value of earnings in RUNE. i.e runeEarned + (assetsEarned * assetPrice)
        RuneROI:
          type: number
          format: double
          description: RuneEarned/runeStaked
        AssetROI:
          type: number
          format: double
          description: assetEarned/assetStaked
        PoolROI:
          type: number
          format: double
          description: (runeROI + assetROI)/2
        DateFirstStaked:
          type: string
          format: 'date-time'

    Stakers:
      type: string
      description: staker address


    PoolDetail:
      type: object
      properties:
        Asset:
          $ref: '#/components/schemas/Asset'
        Price:
          type: number
          format: double
          description: Price of Asset (in Rune).
        AssetStakedTotal:
          type: integer
          format: int64
          description: Total Asset Staked
        RuneStakedTotal:
          type: integer
          format: int64
          description: Total Rune Staked
        PoolStakedTotal:
          type: integer
          format: int64
          description: Rune Value staked Total
        AssetDepth:
          type: integer
          format: int64
          description: Total Current Asset Balance
        RuneDepth:
          type: integer
          format: int64
          description: Total Current Rune Balance
        PoolDepth:
          type: integer
          format: int64
          description: RuneDepth * 2
        PoolUnits:
          type: integer
          format: int64
          description: Total poolUnits outstanding.
        SellVolume:
          type: integer
          format: int64
          description: Total volume for ASSET>RUNE (in RUNE).
        BuyVolume:
          type: integer
          format: int64
          description: Total volume for RUNE->ASSET (in ASSET)
        PoolVolume:
          type: integer
          format: int64
          description: Two-way volume in all-time, in Rune
        PoolVolume24hr:
          type: integer
          format: int64
          description: Two-way volume in 24hrs, in Rune
        SellTxAverage:
          type: integer
          format: int64
          description: Average transaction size for ASSET>RUNE (in RUNE)
        BuyTxAverage:
          type: integer
          format: int64
          description: Average transaction size for RUNE->ASSET (in ASSET)
        PoolTxAverage:
          type: integer
          format: int64
          description: Average Pool transaction
        SellSlipAverage:
          type: integer
          format: int64
          description: Average tradeSlip for ASSET->RUNE in %
        BuySlipAverage:
          type: integer
          format: int64
          description: Average tradeSlip for RUNE->ASSET in %
        PoolSlipAverage:
          type: integer
          format: int64
          description: Average Pool Slip
        SellFeeAverage:
          type: integer
          format: int64
          description: Average fee size for ASSET->RUNE. (in RUNE).
        BuyFeeAverage:
          type: integer
          format: int64
          description: Average fee size for RUNE->ASSET. (in ASSET)
        PoolFeeAverage:
          type: integer
          format: int64
          description: Avergage Pool fee
        SellFeesTotal:
          type: integer
          format: int64
          description: Total Fees (in Rune).
        BuyFeesTotal:
          type: integer
          format: int64
          description: Total Fees (in Asset).
        PoolFeesTotal:
          type: integer
          format: int64
          description: Total Fees
        SellAssetCount:
          type: integer
          format: int64
          description: Number of ASSET->RUNE
        BuyAssetCount:
          type: integer
          format: int64
          description: Number of  RUNE->ASSET.
        SwappingTxCount:
          type: integer
          format: int64
          description: Number of swapping transactions in the pool. (buys + sells)
        SwappersCount:
          type: integer
          format: int64
          description: Number of unique swappers interacting with pool
        StakeTxCount:
          type: integer
          format: int64
          description: Number of staking transactions.
        WithdrawTxCount:
          type: integer
          format: int64
          description: Number of Withdraw tx
        StakingTxCount:
          type: integer
          format: int64
          description: Number of stakes + withdraw tx
        StakersCount:
          type: integer
          format: int64
          description: Number of unique Stakers.
        AssetROI:
          type: number
          format: double
          description: Asset Return on investment
        RuneROI:
          type: number
          format: double
          description: Asset Return on investment
        PoolROI:
          type: number
          format: double
          description: Pool ROI
        PoolROI12:
          type: number
          format: double
          description: Pool ROI for 12 months

    AssetDetail:
      type: object
      properties:
        Asset:
          $ref: '#/components/schemas/Asset'
        Name:
          type: string
        DateCreated:
          type: string
          format: date
        Logo:
          type: string
        priceRune:
          type: number
          format: double
        priceUSD:
          type: number
          format: double

    Error:
      required:
        - "error"
      type: object
      properties:
        error:
          type: string

    Asset:
      type: object
      properties:
        chain:
          type: string
        symbol:
          type: string
        ticker:
          type: string
servers:
  - url: http://127.0.0.1:8080
  - url: https://127.0.0.1:8080
