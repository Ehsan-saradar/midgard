openapi: 3.0.0
info:
  title: Midgard Public API
  version: 1.0.0-oas3
  contact:
    email: devs@thorchain.org
  description: The Midgard Public API queries THORChain and any chains linked via the Bifr√∂st and prepares information about the network to be readily available for public users. The API parses transaction event data from THORChain and stores them in a time-series database to make time-dependent queries easy. Midgard does not hold critical information. To interact with BEPSwap and Asgardex, users should query THORChain directly.
paths:
  "/v1/swagger.json":
    get:
      operationId: GetSwagger
      summary: Get Swagger
      description: Returns human and machine readable swagger/openapi specification.
      responses:
        "200":
          description: human and machine readable swagger/openapi specification
      tags:
        - Specification
  "/v1/doc":
    get:
      operationId: GetDocs
      summary: Get Documents
      description: Swagger/openapi 3.0 specification generated documents.
      responses:
        "200":
          description: swagger/openapi 3.0 spec generated docs
      tags:
        - Documentation
  "/v1/health":
    get:
      operationId: GetHealth
      summary: Get Health
      description: Returns an object containing the health response of the API.
      responses:
        "200":
          description: health response of the API.
  "/v1/tx/{address}":
    get:
      operationId: GetTxDetails
      summary: Get transaction
      description: Return an object containing the tx details
      parameters:
        - in: path
          name: address
          description: An address
          required: true
          schema:
            type: string
          example: tbnb1fj2lqj8dvr5pumfchc7ntlfqd2v6zdxqwjewf5
      responses:
        "200":
          $ref: '#/components/responses/TxDetailedResponse'
  "/v1/tx/{address}/txid/{txid}":
    get:
      operationId: GetTxDetailsByAddressTxId
      summary: Get transaction
      description: Return an object containing the tx details
      parameters:
        - in: path
          name: address
          description: An address
          required: true
          schema:
            type: string
          example: tbnb1fj2lqj8dvr5pumfchc7ntlfqd2v6zdxqwjewf5
        - in: path
          name: txid
          description: An Asset
          required: true
          schema:
            type: string
          example: TCAN-014
      responses:
        "200":
          $ref: '#/components/responses/TxDetailedResponse'
  "/v1/tx/{address}/asset/{asset}":
    get:
      operationId: GetTxDetailsByAddressAsset
      summary: Get transaction
      description: Return an object containing the tx details
      parameters:
        - in: path
          name: address
          description: An address
          required: true
          schema:
            type: string
          example: tbnb1fj2lqj8dvr5pumfchc7ntlfqd2v6zdxqwjewf5
        - in: path
          name: asset
          description: An asset (CHAIN.SYMBOL)
          required: true
          schema:
            type: string
          example: BNB.TOMOB-1E1
      responses:
        "200":
          $ref: '#/components/responses/TxDetailedResponse'
  "/v1/tx/asset/{asset}":
    get:
      operationId: GetTxDetailsByAsset
      summary: Get transaction
      description: Return an object containing the tx details
      parameters:
        - in: path
          name: asset
          description: An asset (CHAIN.SYMBOL)
          required: true
          schema:
            type: string
          example: BNB.TOMOB-1E1
      responses:
        "200":
          $ref: '#/components/responses/TxDetailedResponse'
  "/v1/stats":
    get:
      operationId: GetStats
      summary: Get Global Stats
      description: Returns an object containing global stats for all pools and all transactions.
      responses:
        "200":
          $ref: '#/components/responses/StatsResponse'
  "/v1/assets":
    get:
      operationId: GetAssetInfo
      summary: Get Asset Information
      description: Detailed information about a specific asset. Returns enough information to display a unique asset in various user interfaces, including latest price. The logo is sourced from an internal database. 
      parameters:
        - in: query
          name: asset
          description: One or more comma separated unique asset (CHAIN.SYMBOL)
          required: true
          schema:
            type: string
          example: [BNB.TOMOB-1E1,BNB.TCAN-014]
      responses:
        "400":
          $ref: '#/components/responses/GeneralErrorResponse'
        "200":
          $ref: '#/components/responses/AssetsDetailedResponse'
  "/v1/pools":
    get:
      operationId: GetPools
      summary: Get Asset Pools
      description: Returns an array containing all the assets supported on BEPSwap pools
      responses:
        "400":
          $ref: '#/components/responses/GeneralErrorResponse'
        "200":
          $ref: '#/components/responses/PoolsResponse'
  "/v1/pools/detail":
    get:
      operationId: GetPoolsData
      summary: Get Pools Data
      description: Returns an object containing all the pool data for that asset. All assets on BEPSwap have associated pools. 
      parameters:
        - in: query
          name: asset
          description: One or more comma separated unique asset (CHAIN.SYMBOL)
          required: true
          schema:
            type: string
          example: [BNB.TOMOB-1E1,BNB.TCAN-014]
      responses:
        "200":
          $ref: '#/components/responses/PoolsDetailedResponse'

  "/v1/stakers":
    get:
      operationId: GetStakersData
      summary: Get Stakers
      description: Returns an array containing the addresses for all stakers.
      responses:
        "200":
          "$ref": "#/components/responses/StakersResponse"

  "/v1/stakers/{address}":
    get:
      operationId: GetStakersAddressData
      summary: Get Staker Data
      description: Returns an array containing all the pools the staker is staking in.
      parameters:
        - in: path
          name: address
          description: Unique staker address
          required: true
          schema:
            type: string
          example: 'bnb1jxfh2g85q3v0tdq56fnevx6xcxtcnhtsmcu64m'
      responses:
        "200":
          $ref: '#/components/responses/StakersAddressDataResponse'

  "/v1/stakers/{address}/pools":
    get:
      operationId: GetStakersAddressAndAssetData
      summary: Get Staker Pool Data
      description: Returns an object containing staking data for the specified staker and pool.
      parameters:
        - in: path
          name: address
          description: Unique staker address
          required: true
          schema:
            type: string
          example: 'bnb1jxfh2g85q3v0tdq56fnevx6xcxtcnhtsmcu64m'
        - in: query
          name: asset
          description: One or more comma separated unique asset (CHAIN.SYMBOL)
          required: true
          schema:
            type: string
          example: [BNB.TOMOB-1E1,BNB.TCAN-014]
      responses:
        "200":
          $ref: '#/components/responses/StakersAssetDataResponse'
  "/v1/thorchain/pool_addresses":
    get:
      operationId: GetThorchainProxiedEndpoints
      summary: Get the Proxied Pool Addresses
      description: Returns a proxied endpoint for the pool_addresses endpoint from a local thornode
      responses:
        "200":
          $ref: '#/components/responses/ThorchainEndpointsResponse'
components:
  responses:
    PoolsDetailedResponse:
      description: object containing pool data for that asset
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PoolDetail'

    StatsResponse:
      description: object containing global BEPSwap data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StatsData'
    TxDetailedResponse:
      description: Returns an array of transaction events
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TxDetails'        

    StakersAddressDataResponse:
      description: array of all the pools the staker is staking in
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StakersAddressData'

    StakersResponse:
      description: array of all the stakers
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Stakers'

    StakersAssetDataResponse:
      description: object containing staking data for a specific staker and asset
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StakersAssetData'

    AssetsDetailedResponse:
      description: object containing detailed asset information
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AssetDetail'

    PoolsResponse:
      description: array of assets
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/asset'

    GeneralErrorResponse:
      description: error message
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    ThorchainEndpointsResponse:
      description: Get Return an object for the proxied pools_addresses endpoint.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ThorchainEndpoints'

  schemas:
    TxDetails:
      properties:
        pool:
          $ref: '#/components/schemas/asset'
        type:
          type: string
          enum: [swap, stake, unstake, rewards, add, pool, gas, refund]
        status:
          type: string
          enum: [success, refund, priceCancelled] 
        in:
          $ref: '#/components/schemas/tx'
        out:
          type: array
          items:
            $ref: '#/components/schemas/tx'
        date:
          type: string
        gas:
          $ref: '#/components/schemas/gas'
        options:
          $ref: '#/components/schemas/option'
        height:
          type: string 
        events:
          $ref: '#/components/schemas/event'

    StatsData:
      type: object
      properties:
        dailyActiveUsers:
          type: string
          description: Daily active users (unique addresses interacting)
        monthlyActiveUsers:
          type: string
          description: Monthly active users
        totalUsers:
          type: string
          description: Total unique swappers & stakers
        dailyTx:
          type: string
          description: Daily transactions
        monthlyTx:
          type: string
          description: Monthly transactions
        totalTx:
          type: string
          description: Total transactions
        totalVolume24hr:
          type: string
          description: Total (in RUNE Value) of all assets swapped in 24hrs
        totalVolume:
          type: string
          description: Total (in RUNE Value) of all assets swapped since start.
        totalStaked:
          type: string
          description: Total staked (in RUNE Value).
        totalDepth:
          type: string
          description: Total RUNE balances
        totalEarned:
          type: string
          description: Total earned (in RUNE Value).
        poolCount:
          type: string
          description: Number of active pools
        totalAssetBuys:
          type: string
          description: Total buying transactions
        totalAssetSells:
          type: string
          description: Total selling transactions
        totalStakeTx:
          type: string
          description: Total staking transactions
        totalWithdrawTx:
          type: string
          description: Total withdrawing transactions

    StakersAddressData:
      type: object
      properties:
        poolsArray:
          type: array
          items:
            $ref: '#/components/schemas/asset'
        totalStaked:
          type: string
          description: Total staked (in RUNE) across all pools.
        totalEarned:
          type: string
          description: Total value of earnings (in RUNE) across all pools.
        totalROI:
          type: number
          format: double
          description: Average of all pool ROIs.

    StakersAssetData:
      type: object
      properties:
        asset:
          $ref: '#/components/schemas/asset'
        stakeUnits:
          type: string
          description: Represents ownership of a pool.
        runeStaked:
          type: string
          description: Amount of RUNE staked.
        assetStaked:
          type: string
          description: Amount of Assets staked.
        poolStaked:
          type: string
          description: RUNE value staked.
        runeEarned:
          type: string
          description: Value of RUNE earned from the pool.
        assetEarned:
          type: string
          description: Value of Assets earned from the pool. 
        poolEarned:
          type: string
          description: Total value of earnings (in RUNE). 
        runeROI:
          type: number
          format: double
          description: ROI of the Rune side.
        assetROI:
          type: number
          format: double
          description: ROI of the Asset side
        poolROI:
          type: number
          format: double
          description: Average ROI (in RUNE) of both sides
        dateFirstStaked:
          type: string

    Stakers:
      type: string
      description: Staker address
      example: tbnb1fj2lqj8dvr5pumfchc7ntlfqd2v6zdxqwjewf5

    PoolDetail:
      type: object
      properties:
        asset:
          $ref: '#/components/schemas/asset'
        status:
          type: string
          enum: [bootstrapped, enabled, disabled]
        price:
          type: number
          format: double
          description: Price of Asset (in RUNE).
        assetStakedTotal:
          type: string
          description: Total Asset staked
        runeStakedTotal:
          type: string
          description: Total RUNE staked
        poolStakedTotal:
          type: string
          description: Rune value staked Total
        assetDepth:
          type: string
          description: Total current Asset balance
        runeDepth:
          type: string
          description: Total current Rune balance
        poolDepth:
          type: string
          description: Total depth of both sides (in RUNE)
        poolUnits:
          type: string
          description: Total pool units outstanding
        sellVolume:
          type: string
          description: Total Asset sell volume (ASSET>RUNE) (in RUNE).
        buyVolume:
          type: string
          description: Total Asset buy volume (RUNE->ASSET) (in Asset)
        poolVolume:
          type: string
          description: Two-way volume of all-time (in RUNE)
        poolVolume24hr:
          type: string
          description: Two-way volume in 24hrs (in RUNE)
        sellTxAverage:
          type: string
          description: Average Asset sell transaction size (ASSET>RUNE) (in RUNE)
        buyTxAverage:
          type: string
          description: Average Asset buy transaction size for (RUNE->ASSET) (in ASSET)
        poolTxAverage:
          type: string
          description: Average pool transaction
        sellSlipAverage:
          type: number
          format: double
          description: Average trade slip for ASSET->RUNE in %
        buySlipAverage:
          type: number
          format: double
          description: Average trade slip for RUNE->ASSET in %
        poolSlipAverage:
          type: number
          format: double
          description: Average pool slip
        sellFeeAverage:
          type: string
          description: Average buy Asset fee size for ASSET->RUNE (in RUNE)
        buyFeeAverage:
          type: string
          description: Average sell Asset fee size for RUNE->ASSET (in ASSET)
        poolFeeAverage:
          type: string
          description: Average pool fee
        sellFeesTotal:
          type: string
          description: Total fees (in RUNE)
        buyFeesTotal:
          type: string
          description: Total fees (in Asset)
        poolFeesTotal:
          type: string
          description: Total fees
        sellAssetCount:
          type: string
          description: Number of ASSET->RUNE transactions
        buyAssetCount:
          type: string
          description: Number of RUNE->ASSET transactions
        swappingTxCount:
          type: string
          description: Number of swapping transactions in the pool (buys and sells)
        swappersCount:
          type: string
          description: Number of unique swappers interacting with pool
        stakeTxCount:
          type: string
          description: Number of stake transactions
        withdrawTxCount:
          type: string
          description: Number of withdraw transactions
        stakingTxCount:
          type: string
          description: Number of stake & withdraw transactions
        stakersCount:
          type: string
          description: Number of unique stakers
        assetROI:
          type: number
          format: double
          description: Asset return on investment
        runeROI:
          type: number
          format: double
          description: RUNE return on investment
        poolROI:
          type: number
          format: double
          description: Pool ROI (average of RUNE and Asset ROI)
        poolROI12:
          type: number
          format: double
          description: Pool ROI over 12 months

    AssetDetail:
      type: object
      properties:
        asset:
          $ref: '#/components/schemas/asset'
        name:
          type: string
        dateCreated:
          type: string
        logo:
          type: string
        priceRune:
          type: number
          format: double

    Error:
      required:
        - "error"
      type: object
      properties:
        error:
          type: string
    coins:
      type: array
      items:
        $ref: '#/components/schemas/coin'
    coin:
      type: object
      properties:
        asset:
          $ref: '#/components/schemas/asset'
        amount:
          type: string
    asset:
      type: string
    tx:
      type: object
      properties:
        txID:
          type: string
        memo:
          type: string
        address:
          type: string
        coins:
          $ref: '#/components/schemas/coins'
    gas:
      type: object
      properties:
        asset:
          $ref: '#/components/schemas/asset'
        amount:
          type: string
    option:
      type: object
      properties:
        priceTarget:
          type: string
        withdrawBasisPoints:
          type: number
          format: double
        asymmetry:
          type: number
          format: double
    event:
      type: object
      properties:
        fee:
          type: string
        stakeUnits:
          type: string
        slip:
          type: number
          format: double

    ThorchainEndpoint:
      type: object
      properties:
        chain:
          type: string
        pub_key:
          type: string
        address:
          type: string

    ThorchainEndpoints:
      type: object
      properties:
        current:
          type: array
          items:
            $ref: '#/components/schemas/ThorchainEndpoint'

servers:
  - url: http://127.0.0.1:8080
  - url: https://127.0.0.1:8080
