cache:
  paths:
    - .cache

before_script:
  - mkdir -p .cache
  - export GOPATH="$CI_PROJECT_DIR/.cache"

stages:
  - test
  - deploy

unit_tests:
  image: docker/compose:1.25.0-rc2-alpine
  stage: test
  variables:
    GOPATH: "~"
  services:
    - docker:dind
  tags:
    - docker
  before_script:
    - echo $GOPATH
  script:
    - ./scripts/run.sh chain-service go test ./...

lint:
  image: golangci/golangci-lint
  stage: test
  script:
    - make lint-verbose

deploy:develop:
  stage: deploy
  before_script:
    - apk update
    - apk add python py-pip make git
    - pip install awscli
  except:
    - schedules
  environment:
    name: develop
  script: make -C ./build deploy
  only:
    - master

deploy:staging:
  stage: deploy
  before_script:
    - apk update
    - apk add python py-pip make git
    - pip install awscli
  environment:
    name: staging
  script: make -C ./build deploy
  only:
    - schedules

deploy:production:
  stage: deploy
  before_script:
    - apk update
    - apk add python py-pip make git
    - pip install awscli
  except:
    - schedules
  environment:
    name: production
  script: make -C ./build deploy
  only:
    - master
  when: manual

# TODO Review once new deployment method is running
#trigger_build_and_deploy:
#  stage: deploy
#  only:
#    - master
#  script:
#    - "curl -X POST -F token=$TOKEN -F ref=master https://gitlab.com/api/v4/projects/14289231/trigger/pipeline"
